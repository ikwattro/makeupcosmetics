<?php


namespace Store\CustomerBundle\Entity;

use FOS\UserBundle\Model\User as BaseUser;
use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity
 */
class Customer extends BaseUser
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\OneToMany(targetEntity="Store\ProductBundle\Entity\Cart", mappedBy="customer", cascade={"persist"})
     */
    protected $carts;

    /**
     * @ORM\OneToOne(targetEntity="Store\CustomerBundle\Entity\Profile")
     * @ORM\JoinColumn(name="profile_id", referencedColumnName="id", nullable=true)
     */
    protected $profile;

    /**
     * @ORM\OneToMany(targetEntity="Store\AddressBundle\Entity\Address", mappedBy="customer", cascade={"persist"})
     * @ORM\JoinColumn(name="address_id", referencedColumnName="id", nullable=true)
     */
    protected $addresses;


    public function __construct()
    {
        parent::__construct();
        // your own logic
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Add carts
     *
     * @param \Store\ProductBundle\Entity\Cart $carts
     * @return Customer
     */
    public function addCart(\Store\ProductBundle\Entity\Cart $carts)
    {
        $this->carts[] = $carts;
    
        return $this;
    }

    /**
     * Remove carts
     *
     * @param \Store\ProductBundle\Entity\Cart $carts
     */
    public function removeCart(\Store\ProductBundle\Entity\Cart $carts)
    {
        $this->carts->removeElement($carts);
    }

    /**
     * Get carts
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getCarts()
    {
        return $this->carts;
    }
}